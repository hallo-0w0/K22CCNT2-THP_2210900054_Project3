package com.springmvc.controllers;

import com.springmvc.beans.thpChiTietPhieuNhap;
import com.springmvc.dao.thpChiTietPhieuNhapDao;
import com.springmvc.dao.thpSanPhamDao;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
@RequestMapping("/thpchitietphieunhap")
public class thpChiTietPhieuNhapController {

    @Autowired
    private thpChiTietPhieuNhapDao chiTietPhieuNhapDao;

    @Autowired
    private thpSanPhamDao sanPhamDao;

    // ‚úÖ Hi·ªÉn th·ªã danh s√°ch to√†n b·ªô chi ti·∫øt phi·∫øu nh·∫≠p
    @GetMapping("/thpview")
    public String viewAllChiTietPhieuNhap(Model m) {
        List<thpChiTietPhieuNhap> list = chiTietPhieuNhapDao.getAllChiTietPhieuNhap();
        m.addAttribute("list", list);
        return "thpchitietphieunhap/thpview";
    }

    // ‚úÖ Hi·ªÉn th·ªã danh s√°ch chi ti·∫øt theo m√£ phi·∫øu nh·∫≠p
    @GetMapping("/thpview/{thpMaPN}")
    public String viewChiTietPhieuNhap(@PathVariable int thpMaPN, Model m) {
        List<thpChiTietPhieuNhap> list = chiTietPhieuNhapDao.getAllChiTietByPhieuNhap(thpMaPN);
        m.addAttribute("list", list);
        m.addAttribute("thpMaPN", thpMaPN);
        return "thpchitietphieunhap/thpview";
    }

    

    // ‚úÖ Hi·ªÉn th·ªã form th√™m chi ti·∫øt phi·∫øu nh·∫≠p
    @GetMapping("/thpform")
    public String showForm(@RequestParam(required = false, defaultValue = "0") int thpMaPN, Model m) {
        m.addAttribute("command", new thpChiTietPhieuNhap());
        m.addAttribute("listSanPham", sanPhamDao.getThpAllSanPhams());
        m.addAttribute("thpMaPN", thpMaPN);
        return "thpchitietphieunhap/thpform";
    }


    // ‚úÖ L∆∞u chi ti·∫øt phi·∫øu nh·∫≠p + C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
    @PostMapping("/save")
    public String save(@ModelAttribute thpChiTietPhieuNhap ctpn, Model model) {
        // üõë Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
        if (ctpn.getThpMaPN() <= 0 || ctpn.getThpMaSP() <= 0 || ctpn.getThpSoLuongNhap() <= 0) {
            model.addAttribute("error", "D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.");
            model.addAttribute("listSanPham", sanPhamDao.getThpAllSanPhams()); // üîπ Gi·ªØ danh s√°ch s·∫£n ph·∫©m
            return "thpchitietphieunhap/thpform";
        }

        // üõë Ki·ªÉm tra s·ªë l∆∞·ª£ng nh·∫≠p c√≥ qu√° l·ªõn kh√¥ng?
        if (ctpn.getThpSoLuongNhap() > 1000000) {
            model.addAttribute("error", "S·ªë l∆∞·ª£ng nh·∫≠p qu√° l·ªõn! Vui l√≤ng nh·∫≠p gi√° tr·ªã h·ª£p l·ªá.");
            model.addAttribute("listSanPham", sanPhamDao.getThpAllSanPhams()); // üîπ Gi·ªØ danh s√°ch s·∫£n ph·∫©m
            return "thpchitietphieunhap/thpform";
        }

        try {
            // üõ† Ghi log ƒë·ªÉ debug
            System.out.println("üîπ ƒêang l∆∞u chi ti·∫øt phi·∫øu nh·∫≠p:");
            System.out.println("   ‚ûú M√£ Phi·∫øu Nh·∫≠p: " + ctpn.getThpMaPN());
            System.out.println("   ‚ûú M√£ S·∫£n Ph·∫©m: " + ctpn.getThpMaSP());
            System.out.println("   ‚ûú S·ªë L∆∞·ª£ng Nh·∫≠p: " + ctpn.getThpSoLuongNhap());

            // üõ† L∆∞u chi ti·∫øt phi·∫øu nh·∫≠p
            chiTietPhieuNhapDao.save(ctpn);

            // üõ† C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng t·ªìn kho
            sanPhamDao.updateSoLuongTon(ctpn.getThpMaSP(), ctpn.getThpSoLuongNhap());

        } catch (Exception e) {
            // üõë B·∫Øt l·ªói v√† hi·ªÉn th·ªã th√¥ng b√°o
            model.addAttribute("error", "L·ªói khi l∆∞u d·ªØ li·ªáu: " + e.getMessage());
            model.addAttribute("listSanPham", sanPhamDao.getThpAllSanPhams()); // üîπ Gi·ªØ danh s√°ch s·∫£n ph·∫©m
            return "thpchitietphieunhap/thpform";
        }

        // ‚úÖ Th√†nh c√¥ng ‚Üí Chuy·ªÉn h∆∞·ªõng v·ªÅ danh s√°ch
        return "redirect:/thpchitietphieunhap/thpview/" + ctpn.getThpMaPN();
    }


    // ‚úÖ Hi·ªÉn th·ªã form ch·ªânh s·ª≠a chi ti·∫øt phi·∫øu nh·∫≠p
    @GetMapping("/thpedit/{thpMaPN}/{thpMaSP}")
    public String edit(@PathVariable int thpMaPN, @PathVariable int thpMaSP, Model m) {
        thpChiTietPhieuNhap ctpn = chiTietPhieuNhapDao.getChiTietById(thpMaPN, thpMaSP);
        if (ctpn == null) return "redirect:/thpchitietphieunhap/thpview/" + thpMaPN;
        m.addAttribute("command", ctpn);
        return "thpchitietphieunhap/thpedit";
    }

    // ‚úÖ L∆∞u ch·ªânh s·ª≠a chi ti·∫øt phi·∫øu nh·∫≠p
    @PostMapping("/thpeditsave")
    public String editSave(@ModelAttribute thpChiTietPhieuNhap ctpn) {
        chiTietPhieuNhapDao.update(ctpn);
        return "redirect:/thpchitietphieunhap/thpview/" + ctpn.getThpMaPN();
    }

    // ‚úÖ X√≥a chi ti·∫øt phi·∫øu nh·∫≠p
    @GetMapping("/thpdelete/{thpMaPN}/{thpMaSP}")
    public String delete(@PathVariable int thpMaPN, @PathVariable int thpMaSP) {
        chiTietPhieuNhapDao.delete(thpMaPN, thpMaSP);
        return "redirect:/thpchitietphieunhap/thpview/" + thpMaPN;
    }
}
